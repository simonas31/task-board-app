services:
  #--- BACKEND SERVICES (LARAVEL) ---

  # 1. Nginx: Web server that receives requests and forwards PHP requests to php-fpm.
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80" # Mapped to 8080 on host to avoid conflicts with other services
    volumes:
      - ./backend/docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend:/var/www # Nginx may need access to public assets
    networks:
      - myapp-network
    depends_on:
      - php-fpm

  # 2. PHP-FPM: The engine that executes the Laravel application code.
  php-fpm:
    container_name: php-fpm
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: development
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - .env
    volumes:
      - ./backend:/var/www
    networks:
      - myapp-network
    depends_on:
      - postgres
      - redis

  # 3. Workspace: A utility container for running Artisan, Composer, and Vite commands.
  workspace:
    container_name: workspace
    build:
      context: .
      dockerfile: ./docker/development/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    ports:
      - "${VITE_PORT:-5173}:5173" # Expose Vite dev server port
    tty: true
    stdin_open: true
    env_file:
      - .env
    volumes:
      - ./backend:/var/www
    networks:
      - myapp-network

  # 4. Postgres: The database for Laravel.
  postgres:
    container_name: postgres
    image: postgres:18-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-laravel}
      POSTGRES_USER: ${DB_USERNAME:-sail}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - db-data-dev:/var/lib/postgresql/data
    networks:
      - myapp-network

  # 5. Redis: In-memory cache and queue server.
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - myapp-network

  #--- FRONTEND SERVICE (REACT) ---

  # 6. Frontend: The React development server.
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./frontend:/app
      - /app/node_modules # Anonymous volume to prevent node_modules from being overwritten
    ports:
      - "3000:3000"
    networks:
      - myapp-network

#--- SHARED CONFIGURATION ---

networks:
  myapp-network:

volumes:
  db-data-dev:
